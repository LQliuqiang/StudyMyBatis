<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>

    <!--
    1.MyBatis使用properties标签来引用外部的xx.properties文件内容
      resource：引入类路径下资源
      url:引入 网络路径或磁盘路径下资源

       <properties resource="" />
    -->

    <!--
    2.settings标签包含很多重要设置项
    -->

    <settings>
        <!--
        开启驼峰命名规则：如果数据库字段是A_NAME 而JavaBean中的字段是aName，这样使用 select * form TabName 也是可以将查
                          到的A_NAME值赋值给aName的。而不需要 这样写数据库语句 select A_NAME aName,password,sex form TabName
                          才能将查到的A_NAME值赋值给aName的
        -->
        <setting name="mapUnderscoreToCamelCase" value="true"/>

        <!--兼容Oracle（默认是mySql）-->
        <setting name="jdbcTypeForNull" value="NULL"/>


        <!--day3中的分步骤加载：显示的指定每个我们需要更改的配置的值，即使他是默认的。防止版本更新带来的问题  -->
        <setting name="lazyLoadingEnabled" value="true"/>
        <setting name="aggressiveLazyLoading" value="false"/>

        <!--day5 配置二级缓存-->
        <setting name="cacheEnabled" value="true"/>
    </settings>


    <!-- 3、typeAliases标签：别名处理器：可以为我们的java类型起别名
			别名不区分大小写
	-->
    <typeAliases>
        <!--
         day1配置
       -->

        <!-- 1、typeAlias:为某个java类型起别名
                type:指定要起别名的类型全类名;默认别名就是类名小写；employee
                alias:指定新的别名
         -->
        <typeAlias type="com.lq.day1.UserInfo" alias="userInfo"/>

        <!-- <typeAlias type="com.lq.day1.UserInfo" alias="ui"/> -->

        <!-- 2、package:为某个包下的所有类批量起别名
                name：指定包名（为当前包以及下面所有的后代包的每一个类都起一个默认别名（类名小写），）
        -->
        <!--<package name="com.lq.day1.bean"/>-->

        <!-- 3、批量起别名的情况下，使用@Alias注解为某个类型指定新的别名 -->

        <!--
          day2配置
        -->
        <typeAlias type="com.lq.day2.UserInfo" alias="userInfo2"/>
    </typeAliases>

    <!--
    前面三个标签与第5个标签都可以不进行设置，在MyBatis里都有默认值。
    environments标签了解即可，因为transactionManager事务管理器最终还是在与Spring整合的时候，交给Spring来做事物
		4、environments标签：环境们，mybatis可以配置多种环境 ,default指定使用某种环境。可以达到快速切换环境。
			environment：配置一个具体的环境信息；必须有两个标签；id代表当前环境的唯一标识
				1）.transactionManager：事务管理器；
					type：事务管理器的类型;JDBC(JdbcTransactionFactory)|MANAGED(ManagedTransactionFactory)
						自定义事务管理器：实现TransactionFactory接口.type指定为全类名
				2）.dataSource：数据源;
					type:数据源类型;UNPOOLED(UnpooledDataSourceFactory)
								|POOLED(PooledDataSourceFactory)
								|JNDI(JndiDataSourceFactory)
					自定义数据源：实现DataSourceFactory接口，type是全类名
		 -->
    <environments default="development">
        <environment id="development">
            <transactionManager type="JDBC"/>
            <dataSource type="POOLED">
                <property name="driver" value="com.mysql.jdbc.Driver"/>
                <property name="url" value="jdbc:mysql://localhost:3306/mysql"/>
                <property name="username" value="root"/>
                <property name="password" value="123456"/>
            </dataSource>
        </environment>
    </environments>


    <!-- 5、databaseIdProvider：支持多数据库厂商的；
		 type="DB_VENDOR"：VendorDatabaseIdProvider
		 	作用就是得到数据库厂商的标识(驱动getDatabaseProductName())，mybatis就能根据数据库厂商标识来执行不同的sql;
		 	MySQL，Oracle，SQL Server,xxxx
	  -->
    <databaseIdProvider type="DB_VENDOR">
        <!-- 为不同的数据库厂商起别名 -->
        <property name="MySQL" value="mysql"/>
        <property name="Oracle" value="oracle"/>
        <property name="SQL Server" value="sqlserver"/>
    </databaseIdProvider>

    <!--
    6.mappers：将sql映射注册到全局配置中
    mapper:注册一个sql映射
				注册配置文件
				resource：引用类路径下的sql映射文件
					mybatis/mapper/EmployeeMapper.xml
				url：引用网路路径或者磁盘路径下的sql映射文件
					file:///var/mappers/AuthorMapper.xml

				注册接口
				class：引用（注册）接口，
					1、有sql映射文件，映射文件名必须和接口同名，并且放在与接口同一目录下；
					2、没有sql映射文件，所有的sql都是利用注解写在接口上;
					推荐：
						比较重要的，复杂的Dao接口我们来写sql映射文件
						不重要，简单的Dao接口为了开发快速可以使用注解；
    -->

    <mappers>
        <!--
          day1:基本的配置  三种配置方式
        -->
        <!-- 将我们写好的sql映射文件（UserInfoMapper.xml）一定要注册到全局配置文件（mybatis-config.xml）中 -->
        <mapper resource="resources/day1/UserInfoMapper.xml"/>
        <!--注册基于注解的的映射类-->
        <mapper class="com.lq.day1.UserInfoMapperAnnotation"/>
        <!-- 批量注册：注意：如果写了映射文件的接口，就要将映射文件与这个接口放置在同包下。（注解版的没问题） -->
        <!--<package name="com.lq.day1.dao"/>-->

        <!--
         day2: 操作
       -->
        <mapper resource="resources/day2/UserInfoMapper.xml"/>

        <!--
        day3: 表与表之间的关联查询
      -->
        <mapper resource="resources/day3/UserInfoMapper.xml"/>
        <!--主要用于测试：分步骤查询-->
        <mapper resource="resources/day3/CarMapper.xml"/>

        <!--
         day4: 动态SQL
        -->
        <mapper resource="resources/day4/UserInfoMapper.xml"/>

        <!--
        day5: Mybatis的缓存策略
        -->
        <mapper resource="resources/day5/UserInfoMapper.xml"/>
    </mappers>


</configuration>